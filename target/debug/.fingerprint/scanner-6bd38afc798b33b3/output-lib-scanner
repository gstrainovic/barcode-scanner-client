{"message":"the type `[u8; 16000]` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"scanner\\rawinput.rs","byte_start":1900,"byte_end":1935,"line_start":44,"line_end":44,"column_start":44,"column_end":79,"is_primary":true,"text":[{"text":"        let mut array_alloc: [u8; 16000] = MaybeUninit::uninit().assume_init();","highlight_start":44,"highlight_end":79}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"scanner\\rawinput.rs","byte_start":1900,"byte_end":1935,"line_start":44,"line_end":44,"column_start":44,"column_end":79,"is_primary":true,"text":[{"text":"        let mut array_alloc: [u8; 16000] = MaybeUninit::uninit().assume_init();","highlight_start":44,"highlight_end":79}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(invalid_value)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the type `[u8; 16000]` does not permit being left uninitialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mscanner\\rawinput.rs:44:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut array_alloc: [u8; 16000] = MaybeUninit::uninit().assume_init();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(invalid_value)]` on by default\u001b[0m\n\n"}
{"message":"the type `[RAWINPUTDEVICELIST; 1000]` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"scanner\\rawinput.rs","byte_start":4079,"byte_end":4114,"line_start":106,"line_end":106,"column_start":54,"column_end":89,"is_primary":true,"text":[{"text":"        let mut buffer: [RAWINPUTDEVICELIST; 1000] = MaybeUninit::uninit().assume_init();","highlight_start":54,"highlight_end":89}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"scanner\\rawinput.rs","byte_start":4079,"byte_end":4114,"line_start":106,"line_end":106,"column_start":54,"column_end":89,"is_primary":true,"text":[{"text":"        let mut buffer: [RAWINPUTDEVICELIST; 1000] = MaybeUninit::uninit().assume_init();","highlight_start":54,"highlight_end":89}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"raw pointers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the type `[RAWINPUTDEVICELIST; 1000]` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mscanner\\rawinput.rs:106:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut buffer: [RAWINPUTDEVICELIST; 1000] = MaybeUninit::uninit().assume_init();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: raw pointers must be initialized\u001b[0m\n\n"}
{"message":"the type `[u16; 1024]` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"scanner\\rawinput.rs","byte_start":7310,"byte_end":7345,"line_start":183,"line_end":183,"column_start":40,"column_end":75,"is_primary":true,"text":[{"text":"    let mut name_buffer: [u16; 1024] = MaybeUninit::uninit().assume_init();","highlight_start":40,"highlight_end":75}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"scanner\\rawinput.rs","byte_start":7310,"byte_end":7345,"line_start":183,"line_end":183,"column_start":40,"column_end":75,"is_primary":true,"text":[{"text":"    let mut name_buffer: [u16; 1024] = MaybeUninit::uninit().assume_init();","highlight_start":40,"highlight_end":75}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the type `[u16; 1024]` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mscanner\\rawinput.rs:183:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut name_buffer: [u16; 1024] = MaybeUninit::uninit().assume_init();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"message":"the type `[RID_DEVICE_INFO; 1]` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"scanner\\rawinput.rs","byte_start":8731,"byte_end":8766,"line_start":228,"line_end":228,"column_start":49,"column_end":84,"is_primary":true,"text":[{"text":"    let mut data_buffer: [RID_DEVICE_INFO; 1] = MaybeUninit::uninit().assume_init();","highlight_start":49,"highlight_end":84}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"scanner\\rawinput.rs","byte_start":8731,"byte_end":8766,"line_start":228,"line_end":228,"column_start":49,"column_end":84,"is_primary":true,"text":[{"text":"    let mut data_buffer: [RID_DEVICE_INFO; 1] = MaybeUninit::uninit().assume_init();","highlight_start":49,"highlight_end":84}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the type `[RID_DEVICE_INFO; 1]` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mscanner\\rawinput.rs:228:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m228\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut data_buffer: [RID_DEVICE_INFO; 1] = MaybeUninit::uninit().assume_init();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"message":"the type `HIDP_CAPS` does not permit being left uninitialized","code":{"code":"invalid_value","explanation":null},"level":"warning","spans":[{"file_name":"scanner\\rawinput.rs","byte_start":10726,"byte_end":10761,"line_start":286,"line_end":286,"column_start":39,"column_end":74,"is_primary":true,"text":[{"text":"            let mut caps: HIDP_CAPS = MaybeUninit::uninit().assume_init();","highlight_start":39,"highlight_end":74}],"label":"this code causes undefined behavior when executed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"scanner\\rawinput.rs","byte_start":10726,"byte_end":10761,"line_start":286,"line_end":286,"column_start":39,"column_end":74,"is_primary":true,"text":[{"text":"            let mut caps: HIDP_CAPS = MaybeUninit::uninit().assume_init();","highlight_start":39,"highlight_end":74}],"label":"help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"integers must be initialized","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the type `HIDP_CAPS` does not permit being left uninitialized\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mscanner\\rawinput.rs:286:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m286\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut caps: HIDP_CAPS = MaybeUninit::uninit().assume_init();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mthis code causes undefined behavior when executed\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: integers must be initialized\u001b[0m\n\n"}
{"message":"5 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 5 warnings emitted\u001b[0m\n\n"}
